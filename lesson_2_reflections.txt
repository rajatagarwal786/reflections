What happens when you initialize a repository? Why do you need to do it?

	Git creates a .git folder in the directory when we initiaize it. We need 
	it to use Git version control.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	
	Staging area is different as it contains the files to be committed rather 
	than the files we are currently working on.It offers us the functionality 
	of keeping together the files to be committed together in a single commit.

How can you use the staging area to make sure you have one commit per logical
change?

	We can do that by cmparing the stating area with the most recent commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	
	When we want 2 paths to run parallel.

How do the diagrams help you visualize the branch structure?
	
	It shows exactly how the branch structure is right now leaving nothing to 
	imagination.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	
	It is included in the parent branch.
	We represent it this way because it is now a part of the same label.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

	The advantage is that it just merges whenever possible without the need us
	thinking it through.